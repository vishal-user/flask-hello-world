pipeline {
  agent any

  environment {
    VENV = 'venv'
    APP_FILE = 'app.py'
    PID_FILE = 'app.pid'
    LOG_FILE = 'app.log'
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'master', url: 'https://github.com/vishal-user/flask-hello-world.git'
      }
    }

    stage('Setup Python Environment') {
      steps {
        sh '''
          set -e
          # create venv if missing
          if [ ! -d "${VENV}" ]; then
            python3 -m venv ${VENV}
          fi
          . ${VENV}/bin/activate
          python -m pip install --upgrade pip setuptools wheel
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install flask
          fi
        '''
      }
    }

    stage('Run Flask App') {
      steps {
        sh '''
          # run app in background, save PID and redirect logs
          . ${VENV}/bin/activate
          nohup python ${APP_FILE} > ${LOG_FILE} 2>&1 &
          echo $! > ${PID_FILE}
          echo "Started ${APP_FILE} (PID $(cat ${PID_FILE}))"
        '''
      }
    }
  }

  post {
    always {
      sh '''
        # stop app if pid file exists
        if [ -f ${PID_FILE} ]; then
          kill $(cat ${PID_FILE}) >/dev/null 2>&1 || true
          rm -f ${PID_FILE}
          echo "Stopped flask app"
        fi
      '''
      // Optional: keep workspace or cleanup as needed
      cleanWs()
    }

    failure {
      echo "Build failed â€” check ${LOG_FILE} for app output"
    }
  }
}







